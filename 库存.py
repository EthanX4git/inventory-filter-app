{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2342f9be-fcff-43a6-8c90-3844cfdf35e6",
   "metadata": {},
   "outputs": [],
   "source": [
    "import streamlit as st\n",
    "import pandas as pd\n",
    "from openpyxl import load_workbook\n",
    "from openpyxl.styles import PatternFill\n",
    "import tempfile\n",
    "import os\n",
    "\n",
    "# Streamlit 页面配置\n",
    "st.set_page_config(page_title=\"库存筛选工具\", layout=\"wide\")\n",
    "\n",
    "st.title(\"📊 库存筛选自动化工具\")\n",
    "st.write(\"请上传 Excel 文件，系统将自动处理，并提供下载。\")\n",
    "\n",
    "# 上传文件\n",
    "uploaded_file = st.file_uploader(\"📂 选择 Excel 文件\", type=[\"xlsx\"])\n",
    "\n",
    "def process_inventory_data(file_path):\n",
    "    \"\"\" 处理库存数据 \"\"\"\n",
    "    xls = pd.ExcelFile(file_path)\n",
    "    sheet_name = xls.sheet_names[0]  # 取第一个工作表\n",
    "    df = pd.read_excel(file_path, sheet_name=sheet_name)\n",
    "\n",
    "    # 使用第一行作为列名\n",
    "    df.columns = df.iloc[0]\n",
    "    df = df[1:].reset_index(drop=True)\n",
    "\n",
    "    # 调整列名\n",
    "    columns = df.columns.to_list()\n",
    "    stl_count, pa_count = 0, 0\n",
    "    for i in range(len(columns)):\n",
    "        if columns[i] == \"易捷快递:STL-Warehouse\":\n",
    "            stl_count += 1\n",
    "            columns[i] = \"易捷快递:STL-Warehouse-海外仓库存\" if stl_count == 1 else \"易捷快递:STL-Warehouse-海外仓在途库存\"\n",
    "        if columns[i] == \"易捷快递:PA Warehouse\":\n",
    "            pa_count += 1\n",
    "            columns[i] = \"易捷快递:PA Warehouse-海外仓库存\" if pa_count == 1 else \"易捷快递:PA Warehouse-海外仓在途库存\"\n",
    "    df.columns = columns\n",
    "\n",
    "    # 填充 NaN 值\n",
    "    df = df.fillna(0)\n",
    "\n",
    "    # 需要检查的列\n",
    "    required_columns = [\n",
    "        \"SKU\", \"FBA可用天数\", \"FBA可用+入库天数\",\n",
    "        \"易捷快递:STL-Warehouse-海外仓库存\", \"易捷快递:PA Warehouse-海外仓库存\",\n",
    "        \"近7天日均销量\", \"近2天日均销量\"\n",
    "    ]\n",
    "    \n",
    "    # 转换数据类型\n",
    "    for col in required_columns[1:]:\n",
    "        df[col] = pd.to_numeric(df[col], errors='coerce').fillna(0)\n",
    "\n",
    "    # 筛选符合条件的 SKU 组\n",
    "    df_filtered = pd.DataFrame(columns=df.columns)\n",
    "    unique_skus = df[\"SKU\"].unique()\n",
    "    for sku in unique_skus:\n",
    "        sku_group = df[df[\"SKU\"] == sku]\n",
    "\n",
    "        # 筛选逻辑\n",
    "        condition1 = (sku_group[\"FBA可用天数\"] <= 20) & (sku_group[\"FBA可用天数\"] > 0)\n",
    "        condition2 = (sku_group[\"FBA可用+入库天数\"] <= 40) & (sku_group[\"FBA可用+入库天数\"] > 0)\n",
    "        max_warehouse_stock = sku_group[[\"易捷快递:STL-Warehouse-海外仓库存\", \"易捷快递:PA Warehouse-海外仓库存\"]].max(axis=1)\n",
    "        max_sales_threshold = sku_group[[\"近7天日均销量\", \"近2天日均销量\"]].max(axis=1) * 5\n",
    "        condition3 = max_warehouse_stock > max_sales_threshold\n",
    "\n",
    "        if any(condition1 | condition2) and any(condition3):\n",
    "            df_filtered = pd.concat([df_filtered, sku_group, pd.DataFrame([[\"\"] * len(df.columns)], columns=df.columns)], ignore_index=True)\n",
    "\n",
    "    # 创建临时文件保存处理结果\n",
    "    temp_file = tempfile.NamedTemporaryFile(delete=False, suffix=\".xlsx\")\n",
    "    df_filtered.to_excel(temp_file.name, index=False)\n",
    "\n",
    "    # 颜色填充\n",
    "    wb = load_workbook(temp_file.name)\n",
    "    ws = wb.active\n",
    "\n",
    "    # 颜色填充样式\n",
    "    fill_light_blue = PatternFill(start_color=\"ADD8E6\", end_color=\"ADD8E6\", fill_type=\"solid\")  # 浅蓝色\n",
    "    fill_light_red = PatternFill(start_color=\"FFC0C0\", end_color=\"FFC0C0\", fill_type=\"solid\")  # 浅红色\n",
    "\n",
    "    # 获取 \"ASIN\"、\"FBA可用天数\"、\"FBA可用+入库天数\" 的列索引\n",
    "    asin_col_idx = df_filtered.columns.get_loc(\"ASIN\") + 1\n",
    "    fba_days_col_idx = df_filtered.columns.get_loc(\"FBA可用天数\") + 1\n",
    "    fba_inbound_days_col_idx = df_filtered.columns.get_loc(\"FBA可用+入库天数\") + 1\n",
    "\n",
    "    for row_idx, row in enumerate(ws.iter_rows(min_row=2, max_row=ws.max_row), start=2):\n",
    "        # ASIN=Total 填充浅蓝色\n",
    "        if row[asin_col_idx - 1].value == \"Total\":\n",
    "            for cell in ws[row_idx]:\n",
    "                cell.fill = fill_light_blue\n",
    "\n",
    "        # FBA 可用天数 填充浅红色\n",
    "        fba_days_cell = ws.cell(row=row_idx, column=fba_days_col_idx)\n",
    "        fba_inbound_days_cell = ws.cell(row=row_idx, column=fba_inbound_days_col_idx)\n",
    "\n",
    "        if isinstance(fba_days_cell.value, (int, float)) and 0 < fba_days_cell.value <= 20:\n",
    "            fba_days_cell.fill = fill_light_red\n",
    "        if isinstance(fba_inbound_days_cell.value, (int, float)) and 0 < fba_inbound_days_cell.value <= 40:\n",
    "            fba_inbound_days_cell.fill = fill_light_red\n",
    "\n",
    "    # 保存 Excel\n",
    "    wb.save(temp_file.name)\n",
    "    return temp_file.name\n",
    "\n",
    "# 运行数据处理\n",
    "if uploaded_file is not None:\n",
    "    st.success(\"📊 文件上传成功，正在处理数据...\")\n",
    "    processed_file_path = process_inventory_data(uploaded_file)\n",
    "\n",
    "    # 提供下载按钮\n",
    "    with open(processed_file_path, \"rb\") as file:\n",
    "        st.download_button(label=\"📥 下载处理后的 Excel 文件\", data=file, file_name=\"库存管理_筛选.xlsx\", mime=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\")\n",
    "\n",
    "    # 删除临时文件\n",
    "    os.remove(processed_file_path)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
